<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Fahnestockj</title>
    <link>https://fahnestockj.com/</link>
    <description>Recent content on Fahnestockj</description>
    <image>
      <url>https://fahnestockj.com/papermod-cover.png</url>
      <link>https://fahnestockj.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Aug 2022 08:54:43 -0400</lastBuildDate><atom:link href="https://fahnestockj.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Effectiveness at a Startup</title>
      <link>https://fahnestockj.com/posts/effectivenessatastartup/</link>
      <pubDate>Wed, 24 Aug 2022 08:54:43 -0400</pubDate>
      
      <guid>https://fahnestockj.com/posts/effectivenessatastartup/</guid>
      <description>I&amp;rsquo;ve been working at Quanta Technologies a small scrappy startup for the last 8 months. The team has varied from 3-5 members meaning I&amp;rsquo;ve gotten to know my coworkers very well, and am intimately close with the software we&amp;rsquo;re building.
Quanta&amp;rsquo;s values are to be resourceful, iterative, and results driven which to me have always wrapped up into the word effective. How can we really get the most out of our time.</description>
    </item>
    
    <item>
      <title>Abstraction in Software</title>
      <link>https://fahnestockj.com/posts/abstractioninsoftware/</link>
      <pubDate>Sun, 24 Apr 2022 09:41:20 -0400</pubDate>
      
      <guid>https://fahnestockj.com/posts/abstractioninsoftware/</guid>
      <description>The goal of this post is to unpack Cheng Lou&amp;rsquo;s On the Spectrum of Abstraction Talk given at React-Europe in 2016.
The more I learn about the various competing javascript tools like frameworks, libraries, etc the more confused I am by how there isn&amp;rsquo;t a set guide on if you want A use B. As a beginner most tools are entirely unclear on what their purpose is and why/how they help.</description>
    </item>
    
    <item>
      <title>Immutability and React!</title>
      <link>https://fahnestockj.com/posts/immutability/</link>
      <pubDate>Sat, 12 Feb 2022 10:02:24 -0500</pubDate>
      
      <guid>https://fahnestockj.com/posts/immutability/</guid>
      <description>What is it Mutability in Javascript refers to the ability to change the state of an object after its creation.
In Javascript some examples of immutable objects are language primitives. As the lowest atomic level of the language, primitives are immutable which allows easy comparison between values.
For example string primitives cannot be modified after they&amp;rsquo;re created.
const string1 = &amp;#39;foo&amp;#39; string1.concat(&amp;#39;bar&amp;#39;) console.log(string1) //foo string1 is not actually modified by its method, instead the method returns a new string with the concatenation complete.</description>
    </item>
    
    <item>
      <title>6502 Computer</title>
      <link>https://fahnestockj.com/projects/6502/</link>
      <pubDate>Sat, 11 Sep 2021 15:48:05 -0400</pubDate>
      
      <guid>https://fahnestockj.com/projects/6502/</guid>
      <description>Used assembly programming to create a 16 bit binary to decimal converter which gathers inputs using processor interrupts and displays on a 16x2 character LCD. Design came from Ben Eater&amp;rsquo;s fantastic series on building and programming a 6502.
Gained experience breadboarding and debugging circuits including making a debounced single step clock to debug the early stages of the 6502.</description>
    </item>
    
  </channel>
</rss>
