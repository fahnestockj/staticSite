<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Fahnestockj</title>
    <link>https://fahnestockj.com/posts/</link>
    <description>Recent content in Posts on Fahnestockj</description>
    <image>
      <url>https://fahnestockj.com/papermod-cover.png</url>
      <link>https://fahnestockj.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Mar 2022 10:44:54 -0500</lastBuildDate><atom:link href="https://fahnestockj.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Another GraphQL Rest Comparison</title>
      <link>https://fahnestockj.com/posts/graphql_rest/</link>
      <pubDate>Sat, 05 Mar 2022 10:44:54 -0500</pubDate>
      
      <guid>https://fahnestockj.com/posts/graphql_rest/</guid>
      <description>What is REST?  Representation State Transfer an architectural style which aims to be lightweight, scalable, and flexible. RESTful API&amp;rsquo;s follow this style by setting constraints like:
 clients and servers communicate resources with HTTP requests requests should be stateless meaning they only using the information on the request to determine the response   What is GraphQL?  GraphQL is a widely used query language for APIs which treats the data as a graph of relationships rather than a more &amp;ldquo;linear&amp;rdquo; collection of data.</description>
    </item>
    
    <item>
      <title>Immutability and React!</title>
      <link>https://fahnestockj.com/posts/immutability/</link>
      <pubDate>Sat, 12 Feb 2022 10:02:24 -0500</pubDate>
      
      <guid>https://fahnestockj.com/posts/immutability/</guid>
      <description>What is it Mutability in Javascript refers to the ability to change the state of an object after its creation.
 In Javascript some examples of immutable objects are language primitives. As the lowest atomic level of the language, primitives are immutable which allows easy comparison between values.
For example string primitives cannot be modified after they&amp;rsquo;re created.
const string1 = &amp;#39;foo&amp;#39; string1.concat(&amp;#39;bar&amp;#39;) console.log(string1) //foo string1 is not actually modified by its method, instead it the method returns a new string with the concatenation complete.</description>
    </item>
    
  </channel>
</rss>
